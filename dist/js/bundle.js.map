{"version":3,"file":"bundle.js","sources":["../../src/js/eventutil.js","../../src/js/gesturepwd.js","../../src/js/main.js"],"sourcesContent":["//事件封装\r\n\r\nexport function addHandler(element, type, handler) {\r\n    if (element.addEventListener) {\r\n        element.addEventListener(type, handler, false);\r\n    } else if (element.attachEvent) {\r\n        element.attachEvent(\"on\" + type, handler);\r\n    } else {\r\n        element[\"on\" + type] = handler;\r\n    }\r\n};\r\n\r\nexport function removeHandler(element, type, handler) {\r\n    if (element.removeEventListener) {\r\n        element.removeEventListener(type, handler, false);\r\n    } else if (element.detachEvent) {\r\n        element.detachEvent(\"on\" + type, handler);\r\n    } else {\r\n        element[\"on\" + type] = null;\r\n    }\r\n};\r\n\r\nexport function getEvent(event) {\r\n    return event ? event : window.event;\r\n};\r\n\r\nexport function getType(event) {\r\n    return event.type;\r\n};\r\n\r\nexport function getTarget(event) {\r\n    return event.target || event.srcElement;\r\n};\r\n\r\nexport function preventDefault(event) {\r\n    if (event.preventDefault) {\r\n        event.preventDefault();\r\n    } else {\r\n        event.returnValue = false;\r\n    }\r\n};\r\n\r\nexport function stopPropagation(event) {\r\n    if (event.stopPropagation) {\r\n        event.stopPropagation();\r\n    } else {\r\n        event.cancalBubble = true;\r\n    }\r\n}","import * as EventUtil from './eventutil.js';\r\n\r\n// 全局获取页面中的canvas画布\r\nconst canvas = document.getElementById('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nconst oP = document.getElementsByTagName('p')[0];\r\nconst oDiv = document.getElementById('choose');\r\nconst oSetup = oDiv.getElementsByTagName('input')[0];\r\nconst oVerify = oDiv.getElementsByTagName('input')[1];\r\n\r\nconst params = {\r\n    arr: [],\r\n    restPoint: [],\r\n    lastPoint: [],\r\n    touchFlag: false\r\n}\r\n\r\nexport default class GesturePWD {\r\n    constructor(props) {\r\n        this.n = props.n || 3;\r\n        this.initDom(this.n);\r\n    }\r\n\r\n    // 初始化Dom结构\r\n    initDom(n) {\r\n        // 当视窗大小超过ipad的大小时，固定设置容器宽度为800。\r\n        // 当视窗小于800之后，根据设备宽高动态设置画布大小\r\n        let width = Math.min(800, document.documentElement.clientWidth);\r\n        let height = document.documentElement.clientHeight;\r\n\r\n        canvas.setAttribute(\"width\", width + 'px');\r\n        canvas.setAttribute(\"height\", height * 0.6 + 'px');\r\n        canvas.style.className = 'canvas';\r\n\r\n        this.initCanvas(n);\r\n        this.addEvent();\r\n    }\r\n\r\n    initParams(props) {\r\n        this.r = 0;\r\n        this.arr = [];\r\n        this.restPoint = [];\r\n        this.lastPoint = [];\r\n        this.touchFlag = false;\r\n    }\r\n\r\n    // 初始化画布，实现n阶矩阵\r\n    initCanvas(n) {\r\n        this.initParams();\r\n        // 求canvas的圆圈半径\r\n        this.r = ctx.canvas.width / (2 + 4 * n);\r\n        for (var i = 0; i < n; i++) {\r\n            for (var j = 0; j < n; j++) {\r\n                var obj = {\r\n                    x: j * 4 * this.r + 3 * this.r,\r\n                    y: i * 4 * this.r + 3 * this.r\r\n                };\r\n                this.arr.push(obj);\r\n                this.restPoint.push(obj);\r\n            }\r\n        }\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        for (var i = 0; i < this.arr.length; i++) {\r\n            this.drawCircle(this.arr[i].x, this.arr[i].y);\r\n        }\r\n    }\r\n\r\n    // 对n阶矩阵，在画布上画圆\r\n    drawCircle(x, y) {\r\n        ctx.strokeStyle = '#FFA500';\r\n        ctx.lineWidth = 2;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, this.r, 0, Math.PI * 2, true);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n    // 当点击圆圈时，圆圈变为实心点\r\n    drawCurCir(x, y) {\r\n        ctx.fillStyle = '#FFA500';\r\n        ctx.lineWidth = 2;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, this.r, 0, Math.PI * 2, true);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    // 对画布上的圆进行圆心打点操作\r\n    drawPoint(x, y) {\r\n        ctx.fillStyle = \"#FF0000\";\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, 2, 0, Math.PI * 2, true);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    // 根据打点圆心位置，绘制密码折线\r\n    drawLine(point, lastPoint) {\r\n        if (!this.lastPoint) { return; }\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 3;\r\n        ctx.moveTo(this.lastPoint[0].x, this.lastPoint[0].y);\r\n        for (var i = 0; i < this.lastPoint.length; i++) {\r\n            ctx.lineTo(this.lastPoint[i].x, this.lastPoint[i].y);\r\n        }\r\n        ctx.lineTo(point.x, point.y);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    // 获得当前点的位置\r\n    getPosition(e) {\r\n        // 获取当前对象的top、right、bottom、left、width、height等值。\r\n        var rect = e.currentTarget.getBoundingClientRect();\r\n        var po = {\r\n            x: Math.floor(e.touches[0].clientX - rect.left),\r\n            y: Math.floor(e.touches[0].clientY - rect.top)\r\n        };\r\n        // 返回当前事件触发对象的位置\r\n        return po;\r\n    }\r\n\r\n    // 随着触摸点的移动，更新触摸点的位置\r\n    updatePosition(point) {\r\n        // 清除面板\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        // 重新画圆\r\n        for (var i = 0; i < this.arr.length; i++) {\r\n            this.drawCircle(this.arr[i].x, this.arr[i].y);\r\n        }\r\n        this.drawPoint(this.lastPoint); // 绘制圆心\r\n        this.drawLine(point, this.lastPoint); // 绘制折线\r\n        for (var i = 0; i < this.restPoint.length; i++) {\r\n            if (Math.abs(point.x - this.restPoint[i].x) < this.r && Math.abs(point.y - this.restPoint[i].y) < this.r) {\r\n                this.drawPoint(this.restPoint[i].x, this.restPoint[i].y);\r\n                this.drawCurCir(this.restPoint[i].x, this.restPoint[i].y); // 绘制实心圆\r\n                this.lastPoint.push(this.restPoint[i]);\r\n                this.restPoint.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 添加触摸事件\r\n    addEvent() {\r\n        // 触摸开始\r\n        EventUtil.addHandler(canvas, 'touchstart', (e) => {\r\n            e = EventUtil.getEvent(e);\r\n            let loc = this.getPosition(e);\r\n            for (var i = 0; i < this.arr.length; i++) {\r\n                if (Math.abs(loc.x - this.arr[i].x) < this.r && Math.abs(loc.y - this.arr[i].y) < this.r) {\r\n                    // 判断起始点是否在圈内部 \r\n                    this.touchFlag = true;\r\n                    this.drawPoint(this.arr[i].x, this.arr[i].y); // 绘制圆心\r\n                    this.drawCurCir(this.arr[i].x, this.arr[i].y); // 绘制实心圆\r\n                    this.lastPoint.push(this.arr[i]);\r\n                    this.restPoint.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        // 触摸点移动\r\n        EventUtil.addHandler(canvas, 'touchmove', (e) => {\r\n            if (this.touchFlag) {\r\n                // 更新触摸点的位置\r\n                e = EventUtil.getEvent(e);\r\n                EventUtil.preventDefault(e);\r\n                this.updatePosition(this.getPosition(e));\r\n            }\r\n\r\n        });\r\n        // 触摸结束\r\n        EventUtil.addHandler(canvas, 'touchend', (e) => {\r\n            if (this.touchFlag) {\r\n                this.touchFlag = false;\r\n                // 绘图完毕，密码操作\r\n                this.initPwd();\r\n            }\r\n        });\r\n    }\r\n\r\n    // 初始化密码，实现设置和验证功能\r\n    initPwd() {\r\n        // 设置密码\r\n        if (oSetup.checked == true) {\r\n            this.setupPwd(this.lastPoint);\r\n        }\r\n        // 验证密码\r\n        if (oVerify.checked == true) {\r\n            this.verifyPwd(this.lastPoint);\r\n        }\r\n    }\r\n\r\n    // 设置密码功能\r\n    setupPwd(lastPoint) {\r\n        if (lastPoint.length <= 4) {\r\n            oP.innerHTML = \"密码太短，至少需要5个点\";\r\n            setTimeout(() => {\r\n                this.initCanvas(this.n);\r\n            }, 1000);\r\n        } else {\r\n            this.checkStorage(lastPoint);\r\n        }\r\n    }\r\n\r\n    // 验证密码功能\r\n    verifyPwd(lastPoint) {\r\n        if (this.checkPwd(lastPoint)) {\r\n            oP.innerHTML = \"密码正确!\"\r\n        } else {\r\n            oP.innerHTML = \"输入的密码不正确\";\r\n            setTimeout(() => {\r\n                this.initCanvas(this.n);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    // 检测是否存入localStorage\r\n    checkStorage(lastPoint) {\r\n        // 若本地localStorage.password不存在，则将当前值存入localStorage\r\n        if (!window.localStorage.getItem('password')) {\r\n            var pwd = JSON.stringify(lastPoint);\r\n            window.localStorage.setItem('password', pwd);\r\n            setTimeout(() => {\r\n                this.initCanvas(this.n);\r\n                oP.innerHTML = \"请再次输入手势密码\";\r\n            }, 1000);\r\n        } else {\r\n            if (!lastPoint) {\r\n                oP.innerHTML = \"请输入手势密码\";\r\n            }\r\n            // 若本地localStorage存在，则判断是否一致\r\n            if (this.checkPwd(lastPoint)) {\r\n                oP.innerHTML = \"密码设置成功\";\r\n                setTimeout(() => {\r\n                    this.initCanvas(this.n);\r\n                    oVerify.setAttribute('checked', true);\r\n                }, 1000);\r\n            } else {\r\n                oP.innerHTML = \"两次输入的不一致\";\r\n                // 若两次密码设置不一致，则重置密码，更新localStorage\r\n                window.localStorage.setItem('password', \"\");\r\n                setTimeout(() => {\r\n                    this.initCanvas(this.n);\r\n                    // 重置，提示重新输入密码\r\n                    oP.innerHTML = \"请重新输入手势密码\";\r\n                }, 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查输入的密码与localStorage.password是否相等\r\n    checkPwd(lastPoint) {\r\n        var oldPwd = JSON.parse(window.localStorage.getItem('password'));\r\n        if (oldPwd.length != lastPoint.length) {\r\n            return false;\r\n        } else {\r\n            for (var i = 0; i < oldPwd.length; i++) {\r\n                if (oldPwd[i].x != lastPoint[i].x || oldPwd[i].y != lastPoint[i].y) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n    }\r\n}","/* \n  功能：UI手势密码组件\n  author: 黎若楠\n  date：2017.03.29\n  modified: 2017.11.19\n*/\n\nimport GesturePWD from './gesturepwd.js';\n\nconst N = 3; // 矩阵参数\nconst initProps = {\n    n: N\n}\nwindow.onload = function() {\n    new GesturePWD(initProps);\n}"],"names":["addHandler","element","type","handler","addEventListener","attachEvent","getEvent","event","window","canvas","document","getElementById","ctx","getContext","oP","getElementsByTagName","oDiv","oSetup","oVerify","GesturePWD","props","n","initDom","this","width","Math","min","documentElement","clientWidth","height","clientHeight","setAttribute","style","className","initCanvas","addEvent","r","arr","restPoint","lastPoint","touchFlag","initParams","i","j","obj","push","clearRect","length","drawCircle","x","y","strokeStyle","lineWidth","beginPath","arc","PI","closePath","stroke","fillStyle","fill","point","moveTo","lineTo","e","rect","currentTarget","getBoundingClientRect","floor","touches","clientX","left","clientY","top","drawPoint","drawLine","abs","drawCurCir","splice","EventUtil","loc","_this","getPosition","preventDefault","returnValue","updatePosition","initPwd","checked","setupPwd","verifyPwd","innerHTML","_this2","checkStorage","checkPwd","_this3","localStorage","getItem","_this4","setItem","pwd","JSON","stringify","oldPwd","parse","initProps","onload"],"mappings":"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"}